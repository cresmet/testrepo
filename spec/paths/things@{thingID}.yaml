parameters:
  - $ref: '#/components/parameters/thingID'
  - $ref: '#/components/parameters/authorizationHeader'
  - $ref: '#/components/parameters/apiKey'
  - $ref: '#/components/parameters/correlationId'
get:
  tags:
    - things
  summary: Get a Thing by ID
  operationId: getThing
  security:
    - bearer: []
    - api_key: []
  description: >
    This endpoint returns data for a Thing (an IoT resource) indexed by
    Thingful. It returns either the latest snapshot of the resource (which may
    be the latest data available), or a parameter can be specified which asks
    Thingful to go and fetch the value from the upstream data source "now".


    In addition this endpoint also allows historical data to be retrieved for
    the Thing by supplying a `from` and `to` parameter specifying the beginning
    and end of a time range. Currently the maximum time range we permit
    historical queries to span is 10 days, though this value is liable to change
    at any time.
  parameters:
    - $ref: '#/components/parameters/refresh'
    - $ref: '#/components/parameters/from'
    - $ref: '#/components/parameters/to'
  responses:
    '200':
      $ref: '#/components/responses/ThingSuccessResponse'
    '401':
      $ref: '#/components/responses/401ErrorResponse'
    '403':
      $ref: '#/components/responses/403ErrorResponse'
    '404':
      $ref: '#/components/responses/Thing404ErrorResponse'
    '500':
      $ref: '#/components/responses/500ErrorResponse'
patch:
  tags:
    - things
  summary: Update Thing
  operationId: updateThing
  security:
    - bearer: []
    - api_key: []
  description: >
    This endpoint allows the owner of a Thingful resource to send an update
    containing new observations and/or location information to Thingful. When
    sending a PATCH request for a thing a client may *only* send the fields they
    specifically wish to update, other fields can be omitted. These omitted
    fields will be left unchanged after the update has completed.


    Typically a client might only send over the contained `observations`
    property for each channel containing new data points to be stored.
  responses:
    '200':
      $ref: '#/components/responses/ThingSuccessResponse'
    '401':
      $ref: '#/components/responses/401ErrorResponse'
    '403':
      $ref: '#/components/responses/403ErrorResponse'
    '404':
      $ref: '#/components/responses/Thing404ErrorResponse'
    '500':
      $ref: '#/components/responses/500ErrorResponse'
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              type: object
              description: The top level container for the updated data for the Thing.
              required:
                - type
                - id
                - attributes
              properties:
                id:
                  $ref: '#/components/schemas/ThingID'
                type:
                  $ref: '#/components/schemas/ThingType'
                attributes:
                  allOf:
                    - $ref: '#/components/schemas/ThingAttributes'
                    - $ref: '#/components/schemas/ThingUpdateAttributes'
      text/csv:
        schema:
          type: object
          properties:
            data:
              type: object
              description: The top level container for the updated data for the Thing.
              required:
                - type
                - id
                - attributes
              properties:
                id:
                  $ref: '#/components/schemas/ThingID'
                type:
                  $ref: '#/components/schemas/ThingType'
                attributes:
                  allOf:
                    - $ref: '#/components/schemas/ThingAttributes'
                    - $ref: '#/components/schemas/ThingUpdateAttributes'
    description: The incoming Thing data to update.
    required: true
